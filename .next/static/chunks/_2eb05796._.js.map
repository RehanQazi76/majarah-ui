{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/rehanuddinqazi/Developer/projects/majarah-ui/sanity/env.ts"],"sourcesContent":["export const apiVersion =\n  process.env.NEXT_PUBLIC_SANITY_API_VERSION || '2025-07-20'\n\nexport const dataset = assertValue(\n  process.env.NEXT_PUBLIC_SANITY_DATASET,\n  'Missing environment variable: NEXT_PUBLIC_SANITY_DATASET'\n)\n\nexport const projectId = assertValue(\n  process.env.NEXT_PUBLIC_SANITY_PROJECT_ID,\n  'Missing environment variable: NEXT_PUBLIC_SANITY_PROJECT_ID'\n)\n\nfunction assertValue<T>(v: T | undefined, errorMessage: string): T {\n  if (v === undefined) {\n    throw new Error(errorMessage)\n  }\n\n  return v\n}\n"],"names":[],"mappings":";;;;;AACE;AADK,MAAM,aACX,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,8BAA8B,IAAI;AAEzC,MAAM,UAAU,4DAErB;AAGK,MAAM,YAAY,0DAEvB;AAGF,SAAS,YAAe,CAAgB,EAAE,YAAoB;IAC5D,IAAI,MAAM,WAAW;QACnB,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///Users/rehanuddinqazi/Developer/projects/majarah-ui/sanity/schemaTypes/contactForm.ts"],"sourcesContent":["import { Rule } from 'sanity';\n\n// sanity/schemaTypes/contact.ts\ninterface ContactFormField {\n    name: string;\n    title: string;\n    type: string;\n    validation?: (Rule: Rule) => Rule;\n    of?: Array<{ type: string }>;\n    initialValue?: () => string;\n    readOnly?: boolean;\n}\n\ninterface ContactFormSchema {\n    name: string;\n    title: string;\n    type: string;\n    fields: ContactFormField[];\n}\n\nconst contactFormSchema: ContactFormSchema = {\n    name: 'contact',\n    title: 'Contact Submissions',\n    type: 'document',\n    fields: [\n        {\n            name: 'businessName',\n            title: 'Business Name',\n            type: 'string',\n            validation: (Rule: Rule) => Rule.required()\n        },\n        {\n            name: 'fullName',\n            title: 'Full Name',\n            type: 'string',\n            validation: (Rule: Rule) => Rule.required()\n        },\n        {\n            name: 'email',\n            title: 'Email',\n            type: 'string',\n            validation: (Rule: Rule) => Rule.required().email()\n        },\n        {\n            name: 'phone',\n            title: 'Phone Number',\n            type: 'string',\n            validation: (Rule: Rule) => Rule.required()\n        },\n        {\n            name: 'countryCode',\n            title: 'Country Code',\n            type: 'string'\n        },\n        {\n            name: 'selectedDate',\n            title: 'Date of Submission',\n            type: 'datetime'\n        },\n        {\n            name: 'primaryInterest',\n            title: 'Primary Interest',\n            type: 'string',\n            validation: (Rule: Rule) => Rule.required()\n        },\n        {\n            name: 'secondaryInterests',\n            title: 'Secondary Interests',\n            type: 'array',\n            of: [{ type: 'string' }],\n        },\n        {\n            name: 'inquiry',\n            title: 'Inquiry Details',\n            type: 'text',\n            validation: (Rule: Rule) => Rule.required().max(2000)\n        },\n        {\n            name: 'budget',\n            title: 'Budget (Monthly)',\n            type: 'number',\n            validation: (Rule: Rule) => Rule.min(0)\n        },\n        {\n            name: 'businessSize',\n            title: 'Business Size',\n            type: 'string'\n        },\n        {\n            name: 'yearsInBusiness',\n            title: 'Years in Business',\n            type: 'string'\n        },\n        {\n            name: 'preferredCallTime',\n            title: 'Preferred Call Time',\n            type: 'string'\n        },\n        {\n            name: 'referralSource',\n            title: 'Referral Source',\n            type: 'string',\n            validation: (Rule: Rule) => Rule.required()\n        },\n        {\n            name: 'submittedAt',\n            title: 'Submitted At',\n            type: 'datetime',\n            initialValue: () => new Date().toISOString(),\n            readOnly: true\n        }\n    ]\n};\n\nexport default contactFormSchema;\n"],"names":[],"mappings":";;;AAoBA,MAAM,oBAAuC;IACzC,MAAM;IACN,OAAO;IACP,MAAM;IACN,QAAQ;QACJ;YACI,MAAM;YACN,OAAO;YACP,MAAM;YACN,YAAY,CAAC,OAAe,KAAK,QAAQ;QAC7C;QACA;YACI,MAAM;YACN,OAAO;YACP,MAAM;YACN,YAAY,CAAC,OAAe,KAAK,QAAQ;QAC7C;QACA;YACI,MAAM;YACN,OAAO;YACP,MAAM;YACN,YAAY,CAAC,OAAe,KAAK,QAAQ,GAAG,KAAK;QACrD;QACA;YACI,MAAM;YACN,OAAO;YACP,MAAM;YACN,YAAY,CAAC,OAAe,KAAK,QAAQ;QAC7C;QACA;YACI,MAAM;YACN,OAAO;YACP,MAAM;QACV;QACA;YACI,MAAM;YACN,OAAO;YACP,MAAM;QACV;QACA;YACI,MAAM;YACN,OAAO;YACP,MAAM;YACN,YAAY,CAAC,OAAe,KAAK,QAAQ;QAC7C;QACA;YACI,MAAM;YACN,OAAO;YACP,MAAM;YACN,IAAI;gBAAC;oBAAE,MAAM;gBAAS;aAAE;QAC5B;QACA;YACI,MAAM;YACN,OAAO;YACP,MAAM;YACN,YAAY,CAAC,OAAe,KAAK,QAAQ,GAAG,GAAG,CAAC;QACpD;QACA;YACI,MAAM;YACN,OAAO;YACP,MAAM;YACN,YAAY,CAAC,OAAe,KAAK,GAAG,CAAC;QACzC;QACA;YACI,MAAM;YACN,OAAO;YACP,MAAM;QACV;QACA;YACI,MAAM;YACN,OAAO;YACP,MAAM;QACV;QACA;YACI,MAAM;YACN,OAAO;YACP,MAAM;QACV;QACA;YACI,MAAM;YACN,OAAO;YACP,MAAM;YACN,YAAY,CAAC,OAAe,KAAK,QAAQ;QAC7C;QACA;YACI,MAAM;YACN,OAAO;YACP,MAAM;YACN,cAAc,IAAM,IAAI,OAAO,WAAW;YAC1C,UAAU;QACd;KACH;AACL;uCAEe","debugId":null}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":["file:///Users/rehanuddinqazi/Developer/projects/majarah-ui/sanity/schemaTypes/index.ts"],"sourcesContent":["import { type SchemaTypeDefinition } from 'sanity'\nimport contactForm from './contactForm'\n\nexport const schema: { types: SchemaTypeDefinition[] } = {\n  types: [\n    contactForm\n  ],\n}\n"],"names":[],"mappings":";;;AACA;;AAEO,MAAM,SAA4C;IACvD,OAAO;QACL,uIAAA,CAAA,UAAW;KACZ;AACH","debugId":null}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":["file:///Users/rehanuddinqazi/Developer/projects/majarah-ui/sanity/structure.ts"],"sourcesContent":["import type {StructureResolver} from 'sanity/structure'\n\n// https://www.sanity.io/docs/structure-builder-cheat-sheet\nexport const structure: StructureResolver = (S) =>\n  S.list()\n    .title('Content')\n    .items(S.documentTypeListItems())\n"],"names":[],"mappings":";;;AAGO,MAAM,YAA+B,CAAC,IAC3C,EAAE,IAAI,GACH,KAAK,CAAC,WACN,KAAK,CAAC,EAAE,qBAAqB","debugId":null}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":["file:///Users/rehanuddinqazi/Developer/projects/majarah-ui/sanity.config.ts"],"sourcesContent":["'use client'\n\n/**\n * This configuration is used to for the Sanity Studio thatâ€™s mounted on the `/app/sanity/[[...tool]]/page.tsx` route\n */\n\nimport {visionTool} from '@sanity/vision'\nimport {defineConfig} from 'sanity'\nimport {structureTool} from 'sanity/structure'\n\n// Go to https://www.sanity.io/docs/api-versioning to learn how API versioning works\nimport {apiVersion, dataset, projectId} from './sanity/env'\nimport {schema} from './sanity/schemaTypes'\nimport {structure} from './sanity/structure'\n\nexport default defineConfig({\n  basePath: '/sanity',\n  projectId,\n  dataset,\n  // Add and edit the content schema in the './sanity/schemaTypes' folder\n  schema,\n  plugins: [\n    structureTool({structure}),\n    // Vision is for querying with GROQ from inside the Studio\n    // https://www.sanity.io/docs/the-vision-plugin\n    visionTool({defaultApiVersion: apiVersion}),\n  ],\n})\n"],"names":[],"mappings":";;;AAEA;;CAEC,GAED;AACA;AACA;AAEA,oFAAoF;AACpF;AACA;AACA;AAbA;;;;;;;uCAee,CAAA,GAAA,0JAAA,CAAA,eAAY,AAAD,EAAE;IAC1B,UAAU;IACV,WAAA,gHAAA,CAAA,YAAS;IACT,SAAA,gHAAA,CAAA,UAAO;IACP,uEAAuE;IACvE,QAAA,iIAAA,CAAA,SAAM;IACN,SAAS;QACP,CAAA,GAAA,0JAAA,CAAA,gBAAa,AAAD,EAAE;YAAC,WAAA,sHAAA,CAAA,YAAS;QAAA;QACxB,0DAA0D;QAC1D,+CAA+C;QAC/C,CAAA,GAAA,uKAAA,CAAA,aAAU,AAAD,EAAE;YAAC,mBAAmB,gHAAA,CAAA,aAAU;QAAA;KAC1C;AACH","debugId":null}}]
}